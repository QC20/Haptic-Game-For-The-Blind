// Game Level 1. Gives an idea of how a potential level design might look. 
// 0 indecates the correct path.
// 1-5 indicates icreased deviation from the path, which corresponds to increased vibration from the vibrator.

const int numRows = 25;  // Number of rows in the map
const int numCols = 25;  // Number of columns in the map

// Define the map using a 2D array
int map[numRows][numCols] = {

[[5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 4. 4. 4. 4. 4. 4. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 3. 3. 3. 3. 3. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 0. 1. 2. 2. 2. 2. 2. 2. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 0. 1. 1. 1. 1. 1. 1. 1. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 0. 0. 0. 0. 0. 0. 0. 1. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 1. 1. 1. 1. 1. 1. 1. 0. 1. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5.]
 [5. 5. 4. 3. 2. 2. 2. 2. 2. 2. 2. 1. 0. 1. 2. 3. 4. 4. 4. 4. 4. 4. 4. 5. 5.]
 [5. 5. 4. 3. 3. 3. 3. 3. 3. 3. 2. 1. 0. 1. 2. 3. 3. 3. 3. 3. 3. 3. 5. 5. 5.]
 [5. 5. 4. 4. 4. 4. 4. 4. 4. 3. 2. 1. 0. 1. 2. 2. 2. 2. 2. 2. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 1. 1. 1. 1. 1. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 0. 0. 0. 0. 0. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 1. 1. 1. 1. 1. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 2. 2. 2. 2. 2. 2. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 5. 4. 3. 3. 3. 3. 3. 3. 3. 2. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 4. 4. 4. 4. 4. 4. 4. 3. 2. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 3. 3. 3. 3. 3. 3. 3. 2. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 2. 2. 2. 2. 2. 2. 2. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 2. 2. 2. 2. 2. 2. 2. 2. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 3. 3. 3. 3. 3. 3. 3. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 4. 4. 4. 4. 4. 4. 4. 4. 5. 5.]
 [5. 5. 5. 5. 5. 5. 5. 4. 3. 2. 1. 0. 1. 2. 3. 4. 5. 5. 5. 5. 5. 5. 5. 5. 5.]]
 };